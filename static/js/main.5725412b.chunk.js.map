{"version":3,"sources":["component/Navbar.js","component/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","name","type","id","placeholder","Textform","useState","text","setText","heading","htmlFor","value","onChange","event","preventDefault","target","rows","onClick","newText","toUpperCase","toLowerCase","joinword","split","reverse","join","copyText","document","getElementById","select","navigator","clipboard","writeText","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+LAEe,SAASA,EAAOC,GAC7B,OACE,qBAAKC,UAAU,8CAAf,SACA,sBAAKA,UAAU,kBAAf,UACA,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAAsCF,EAAMG,OAC5C,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,oBAAIJ,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,sBAKJ,uBAAMD,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBG,KAAK,SAASE,YAAY,SAAS,aAAW,WACnF,wBAAQL,UAAU,0BAA0BG,KAAK,SAAjD,+B,WChBO,SAASG,EAASP,GAI9B,IAmCA,EAAuBQ,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAED,OACE,mCACD,sBAAKT,UAAU,YAAf,UACA,+BAAKD,EAAMW,QAAX,OACA,sBAAKV,UAAU,OAAf,UACE,uBAAOW,QAAQ,QAAQX,UAAU,eACjC,0BAAWA,UAAU,eAAeY,MAAOJ,EAAMK,SAZ5B,SAACC,GACpBA,EAAMC,iBACNN,EAAQK,EAAME,OAAOJ,QAUoDR,GAAG,QAAQa,KAAK,IAAIZ,YAAY,kBAG7G,wBAAQL,UAAU,oBAAoBkB,QA9ChB,SAACJ,GACnBA,EAAMC,iBACN,IAAII,EAAUX,EAAKY,cACnBX,EAAQU,IA2CZ,kCACA,wBAAQnB,UAAU,qBAAqBkB,QAzCjB,SAACJ,GACrB,IAAIK,EAAUX,EAAKa,cACnBZ,EAAQU,IAuCV,kCACA,wBAAQnB,UAAU,oBAAoBkB,QAxBhB,SAACJ,GACrB,IAEIQ,EAFWd,EAAKe,MAAM,IACCC,UACAC,KAAK,IAChChB,EAAQa,IAoBV,0BACA,wBAAQtB,UAAU,oBAAoBkB,QArCb,SAACJ,GAExBL,EADc,KAoChB,4BACA,wBAAQT,UAAU,yBAAyBkB,QAhCxB,SAACJ,GAClB,IAAIY,EAAWC,SAASC,eAAe,SACvCF,EAASG,SACTC,UAAUC,UAAUC,UAAUN,EAASd,QA6BzC,uBAGA,sBAAKZ,UAAU,iBAAf,UACE,yDACA,8BAAIQ,EAAKe,MAAM,KAAKU,OAApB,cAAuCzB,EAAKyB,OAA5C,iBACA,sDAAyB,KAAQzB,EAAKe,MAAM,KAAKU,OAAjD,uBCxCUC,MAnBf,WACE,OACE,qCAEJ,cAACpC,EAAD,CAAQI,KAAK,gBACb,qBAAKF,UAAU,YAAf,SACE,cAACM,EAAD,CAAUI,QAAQ,+BCCLyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,K","file":"static/js/main.5725412b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.name}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        \r\n        \r\n        </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\n \r\n \r\nexport default function Textform(props) {\r\n\r\n   \r\n\r\n   const handleupclick = (event)=>{\r\n       event.preventDefault();\r\n       let newText = text.toUpperCase()\r\n       setText(newText);\r\n   }\r\n\r\n   const handleloclick = (event)=>{\r\n     let newText = text.toLowerCase();\r\n     setText(newText);\r\n\r\n   }\r\n\r\n   const handleClearclick = (event)=>{\r\n     let newText = \"\";\r\n     setText(newText);\r\n\r\n   }\r\n\r\n   const handleCopy = (event) =>{\r\n     var copyText = document.getElementById(\"mybox\");\r\n     copyText.select();\r\n     navigator.clipboard.writeText(copyText.value);\r\n   }\r\n\r\n   const handleReverse = (event)=>{\r\n     let splitWord= text.split(\"\");\r\n     let reverseword =splitWord.reverse();\r\n     let joinword = reverseword.join(\"\");\r\n     setText(joinword);\r\n   }\r\n\r\n   const handleonchange = (event)=>{\r\n       event.preventDefault();\r\n       setText(event.target.value)\r\n   }\r\n   const [text,setText] = useState(\"\");\r\n   \r\n  return (\r\n    <>\r\n   <div className=\"container\">\r\n   <h1>{props.heading} </h1>\r\n   <div className=\"mb-3\">\r\n     <label htmlFor=\"mybox\" className=\"form-label\"></label>\r\n     <textarea  className=\"form-control\" value={text} onChange={handleonchange} id=\"mybox\" rows=\"8\" placeholder=\"Enter Text\"></textarea>\r\n   </div>\r\n\r\n   <button className=\"btn btn-dark mx-2\" onClick={handleupclick}>Convert To Uppercase</button>\r\n   <button className=\"btn btn-dark mx-2 \" onClick={handleloclick}>Convert To Lowercase</button>\r\n   <button className=\"btn btn-dark mx-2\" onClick={handleReverse}>Reverse Text</button>\r\n   <button className=\"btn btn-dark mx-2\" onClick={handleClearclick}>Clear All Text</button>\r\n   <button className=\"btn btn-dark mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n   \r\n   \r\n   <div className=\"container my-3\">\r\n     <h3>Your Typed Word Summary</h3>\r\n     <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n     <p>Time taken to Read : {0.008 * text.split(\" \").length} Minutes </p>\r\n\r\n   </div>\r\n   \r\n   \r\n </div>\r\n\r\n </>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\n\nfunction App() {\n  return (\n    <>\n    \n<Navbar name=\"TextPlayzzz\"></Navbar>\n<div className=\"container\">\n  <Textform heading=\"Enter Text To Play :\"/>\n\n  \n</div>\n\n    \n\n  \n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}